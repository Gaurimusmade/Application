// <auto-generated />
using System;
using Application.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Application.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230829212907_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Application.Models.Addinfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RelationshipType")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("personid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("personid");

                    b.ToTable("Addinfo");
                });

            modelBuilder.Entity("Application.Models.Assesment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Hobby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longgoal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MpyAttendency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shortgoal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("W1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("W2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("W3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("W4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("W5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("personid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("personid");

                    b.ToTable("Assesment");
                });

            modelBuilder.Entity("Application.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Agency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlternativeDepartmentofRm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlternativeEmailofRm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlternativeNameofRm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlternativeTelephoneofRm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentofRm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailofHr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailofRm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employecode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmploymentIsOf")
                        .HasColumnType("int");

                    b.Property<string>("Employmentperiod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastdesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameofHr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameofRm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remunerations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneofHr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneofRm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("personid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("personid");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Application.Models.Declaration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("personid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("personid");

                    b.ToTable("Declaration");
                });

            modelBuilder.Entity("Application.Models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthercollegeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthercourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Otherpercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PGcollegeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PGcourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PGpercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UGcollegeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UGcourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UGpercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XIIcollegeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XIIcourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XIIpercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XcollegeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XcourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Xpercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("percentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("personid")
                        .HasColumnType("int");

                    b.Property<string>("program")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seminarconductby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seminarduration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seminarname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("skill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamsize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("year1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("year2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("personid");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("Application.Models.Passport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Expirydate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Issuedate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Opentotravel")
                        .HasColumnType("int");

                    b.Property<string>("PlaceofIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RfName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rfcurrentcompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rfemail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rftelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rscurrentcompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rsemail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rstelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Visa")
                        .HasColumnType("int");

                    b.Property<int?>("personid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("personid");

                    b.ToTable("Passport");
                });

            modelBuilder.Entity("Application.Models.Private", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PANNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Private");
                });

            modelBuilder.Entity("Application.Models.Addinfo", b =>
                {
                    b.HasOne("Application.Models.Private", "Private")
                        .WithMany("Addinfos")
                        .HasForeignKey("personid");

                    b.Navigation("Private");
                });

            modelBuilder.Entity("Application.Models.Assesment", b =>
                {
                    b.HasOne("Application.Models.Private", "Private")
                        .WithMany("Assesments")
                        .HasForeignKey("personid");

                    b.Navigation("Private");
                });

            modelBuilder.Entity("Application.Models.Company", b =>
                {
                    b.HasOne("Application.Models.Private", "Private")
                        .WithMany("Companys")
                        .HasForeignKey("personid");

                    b.Navigation("Private");
                });

            modelBuilder.Entity("Application.Models.Declaration", b =>
                {
                    b.HasOne("Application.Models.Private", "Private")
                        .WithMany("Declarations")
                        .HasForeignKey("personid");

                    b.Navigation("Private");
                });

            modelBuilder.Entity("Application.Models.Education", b =>
                {
                    b.HasOne("Application.Models.Private", "Private")
                        .WithMany("Educations")
                        .HasForeignKey("personid");

                    b.Navigation("Private");
                });

            modelBuilder.Entity("Application.Models.Passport", b =>
                {
                    b.HasOne("Application.Models.Private", "Private")
                        .WithMany("Passports")
                        .HasForeignKey("personid");

                    b.Navigation("Private");
                });

            modelBuilder.Entity("Application.Models.Private", b =>
                {
                    b.Navigation("Addinfos");

                    b.Navigation("Assesments");

                    b.Navigation("Companys");

                    b.Navigation("Declarations");

                    b.Navigation("Educations");

                    b.Navigation("Passports");
                });
#pragma warning restore 612, 618
        }
    }
}
